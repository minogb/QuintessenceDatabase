@model QuintessenceDataServer.Models.Item

@{
    ViewBag.Title = "Edit " + Model.Name;
    int? currentSlot = null;
    if (Model.Equipment != null) {
        currentSlot = Model.Equipment.Slot;
    }
}
<br />
<div class="row">
    <input id="Name" class="form-control" style="font-size:25px;width:325px;resize:none;" value="@Model.Name">
</div>
<div>
    <hr />
    <dl class="dl-horizontal">
    </dl>
</div>

<div class="container row">
    <div class="col col-lg-3">
        <div style="width:285px;height:285px; background-color: lightblue;"></div>
        <br />
        <button class="btn-primary btn" style="width:100%;" type="button" onclick="saveItem()">Save</button>
    </div>
    <div class="col" style="width:100%;">
        <h4>Base Item Information:</h4>
        <div class="col">
            <table class="table table-striped table-bordered">
                <tr>
                    <th class="col-lg-3">
                        Stack Size
                    </th>
                    <th>
                        Description
                    </th>
                </tr>
                <tr>
                    <td>
                        <input type="number" id="StackSize" min="0" class="form-control" value="@if (@Model.StackSize.HasValue) {WriteLiteral(Model.StackSize);}">
                    </td>
                    <td>
                        <input id="Description" class="form-control" style="width:100%;resize:none;max-width:9999px;" value="@Model.Description">
                    </td>
                </tr>
            </table>
        </div>
        <div class="col">
            <h4>Equipment:</h4>
            <table class="table table-striped table-bordered">
                <tr>
                    <th class="col-lg-3">
                        Slot
                    </th>
                    <th>
                        Sub Slots
                    </th>
                </tr>
                <tr>
                    <td>
                        Parent Slot
                        <select class="form-select form-select-sm" aria-label=".form-select-sm example" style="width:100%;" id="ParentSlot">
                            @foreach (QuintessenceDataServer.Models.Item.SlotEnumStruct current in QuintessenceDataServer.Models.Item.GetSlotEnum(null)) {
                                <option value="@current.SlotID" @if (Model.Equipment != null && @current.SlotID == Model.Equipment.ParentSlot) { WriteLiteral("selected"); }>@current.Name</option>
                            }
                        </select>
                        Slot
                        <select class="form-select form-select-sm" aria-label=".form-select-sm example" style="width:100%;" id="Slot">
                        </select>
                    </td>
                    <td>
                        <div class="row" id="AvaliableSlots">
                        </div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>
<div>
    <hr />
    <dl class="dl-horizontal">
    </dl>
</div>
<div class="container row">
    <div class="col">
        <h4>Tool Data</h4>
        <table id="toolData" class="table table-striped table-bordered table-hover">
            <tr>
                <th>
                    Delete
                </th>
                <th>
                    Tool Type
                </th>
                <th>
                    Tool Level
                </th>
                <th>
                    Efficiency
                </th>
                <th style="width: 100px;">
                    Is Modifier
                </th>
            </tr>
        </table>
        <button style="width:100%;" class="btn btn-primary" type="button" onclick="AddToolDataRow()">+</button>
    </div>
    <div class="col">
        <h4>Level Requirement Data</h4>
        <table id="levelData" class="table table-striped table-bordered table-hover">
            <tr>
                <th>
                    Delete
                </th>
                <th>
                    Skill
                </th>
                <th>
                    Level
                </th>
                <th style="width: 100px;">
                    Is Modifier
                </th>
            </tr>
        </table>
        <button style="width:100%;" class="btn btn-primary" type="button" onclick="AddLevelRow()">+</button>
    </div>
</div>
<br />
<p>
    <!-- @Html.ActionLink("Edit", "Edit", new { id = Model.ItemID }) |-->
    @Html.ActionLink("Back to List", "Index")
</p>
@section Scripts{
    <script>
        var ParentSlot = null;
        var Slot = null;
        var SubSlots = null;
        var ToolData = @Html.Raw(Model.GetToolsAsJson());
        var LevelData =@Html.Raw(Model.GetSkillsAsJson());
        @if (Model.Equipment != null) {
            if (Model.Equipment.ParentSlot.HasValue) {
                @:ParentSlot = @Model.Equipment.ParentSlot;
            }
            if (Model.Equipment.AvailableSlots.HasValue) {
                @:SubSlots=@Model.Equipment.AvailableSlots;
            }
            @:Slot = @Model.Equipment.Slot;
        }
        ParentSlot = $("#ParentSlot").val();
        fetchUpdatedSlots(false);
        $("#ParentSlot").change(fetchUpdatedSlots);
        $("#Slot").change(fetchUpdatedSubSlots);
        fetchUpdatedToolData();
        fetchUpdatedLevel();
        function saveItem() {
            var SaveValues = new Array();
            SaveValues["StackSize"] = $("#StackSize").val();
            SaveValues["Description"] = $("#Description").val();
            SaveValues["Name"] = $("#Name").val();
            SaveValues["ParentSlot"] = $("#ParentSlot").val();
            SaveValues["Slot"] = $("#Slot").val();
            SaveValues["ToolData"] = new Array();
            SaveValues["LevelData"] = new Array();
            SaveValues["SubSlots"] = 0;
            var skip = true;
            $("#toolData").find('tr').each(function () {
                if (skip) {
                    skip = false;
                    return;
                }
                var tool = new Array();
                tool['ToolID'] = $(this).attr('id');
                tool['ToolType']= $(this).find('#ToolType').val();
                tool['ToolLevel']= $(this).find('#ToolLevel').val();
                tool['Efficiency']= $(this).find('#Efficiency').val();
                tool['IsModifier'] =  $(this).find('#IsModifier').is(':checked');
                SaveValues["ToolData"].push(tool);
            });
            skip = true;
            $("#levelData").find('tr').each(function () {
                if (skip) {
                    skip = false;
                    return;
                }
                var level = new Array();
                level['SkillID'] = $(this).attr('id');
                level['Skill']= $(this).find('#Skill').val();
                level['Level']= $(this).find('#Level').val();
                level['IsModifier'] =  $(this).find('#IsModifier').is(':checked');
                SaveValues["LevelData"].push(level);
            });
            $("#AvaliableSlots").find('input').each(function () {
                if ($(this).is(':checked')) {
                    SaveValues["SubSlots"] |= $(this).val();
                }
            });
            $.post(window.location.href, SaveValues).done(function (json) {
                if (json["error"] != 0) {
                }
                else {

                }
                //TODO;
                alert(json["message"]);
            });
        }
        function deleteData(event) {
            if (event == null)
                return;
            $($(this).parent().parent()).remove();
        }
        function checkSubbox(event) {
            $(event.target).children().each(function () {
                $(this).click();
                //$(this).attr("checked", !$(this).attr("checked"));
            });
        }
        function fetchUpdatedSlots(update = true) {
            if (update) {
                ParentSlot = $("#ParentSlot").val();
                SubSlots = null;
            }
            $("#Slot").empty();
            $("#AvaliableSlots").empty();
            $.getJSON("../Slots/" + ParentSlot).done(function (json) {
                $.each(json, function (current) {
                    $("#Slot").append(new Option(json[current]["Name"], json[current]["SlotID"], null, json[current]["SlotID"] == Slot));
                });
            });
            fetchUpdatedSubSlots(update);
        }
        function fetchUpdatedSubSlots(update = true) {
            if (ParentSlot == null || ParentSlot == 0) {
                if (update) {
                    Slot = $("#Slot").val();
                    SubSlots = null;
                }
                $.getJSON("../Slots/" + Slot).done(function (json) {
                    $("#AvaliableSlots").empty();
                    $.each(json, function (current) {
                        var newCol = document.createElement('div');
                        newCol.classList.add("col-3");
                        var label = document.createElement('label');
                        var input = document.createElement('input');
                        label.classList.add('form-check-label');
                        label.htmlFor = json[current]["SlotID"];
                        label.innerText = json[current]["Name"];
                        input.classList.add("form-check-input");
                        input.type = "checkbox";
                        input.value = json[current]["SlotID"];
                        input.checked = SubSlots & json[current]["SlotID"];
                        newCol.append(input);
                        newCol.append(label);
                        $("#AvaliableSlots").append(newCol );
                    });
                });
            }
        }
        function fetchUpdatedToolData() {
                $.each(ToolData, function (current) {
                    AddToolDataRow(ToolData[current]);
                });
        }
        function fetchUpdatedLevel() {
                $.each(LevelData, function (current) {
                    AddLevelRow(LevelData[current]);
                });
        }
        function AddLevelRow(data) {
            var newRow = document.createElement('tr');
            var deleteTD = document.createElement('td');
            var SkillTD = document.createElement('td');
            var LevelTD = document.createElement('td');
            var IsModifierTD = document.createElement('td');
            IsModifierTD.classList.add("text-center");
            $(IsModifierTD).click(checkSubbox);

            var SkillInput = document.createElement('input');
            SkillInput.type = "number";
            SkillInput.id = "Skill";
            SkillInput.classList.add("form-control");
            SkillTD.appendChild(SkillInput);

            var LevelInput = document.createElement('input');
            LevelInput.type = "number";
            LevelInput.id = "Level";
            LevelInput.classList.add("form-control");
            LevelTD.appendChild(LevelInput);

            var IsModifierInput = document.createElement('input');
            IsModifierInput.type = "checkbox";
            IsModifierInput.id = "IsModifier";
            IsModifierInput.classList.add("form-check-label");
            IsModifierTD.appendChild(IsModifierInput);

            var deletButton = document.createElement('button');
            deletButton.classList.add("btn");
            deletButton.classList.add("btn-primary");
            deletButton.type = "button";
            deletButton.innerHTML="-";
            $(deletButton).click(deleteData);
            deleteTD.append(deletButton);

            if (data != null) {
                SkillInput.value = data["Skill"];
                LevelInput.value = data["Level"];
                IsModifierInput.checked = data["IsModifier"];
                newRow.id = data["SkillID"];
            }
            newRow.append(deleteTD);
            newRow.append(SkillTD);
            newRow.append(LevelTD);
            newRow.append(IsModifierTD);

            $("#levelData").append(newRow);
        }
        function AddToolDataRow(toolData) {
            var newRow = document.createElement('tr');
            var deleteTD = document.createElement('td');
            var ToolTypeTD = document.createElement('td');
            var ToolLevelTD = document.createElement('td');
            var EfficiencyTD = document.createElement('td');
            var IsModifierTD = document.createElement('td');
            IsModifierTD.classList.add("text-center");
            $(IsModifierTD).click(checkSubbox);

            var ToolTypeInput = document.createElement('input');
            ToolTypeInput.type = "number";
            ToolTypeInput.id = "ToolType";
            ToolTypeInput.classList.add("form-control");
            ToolTypeTD.appendChild(ToolTypeInput);

            var ToolLevelInput = document.createElement('input');
            ToolLevelInput.type = "number";
            ToolLevelInput.id = "ToolLevel";
            ToolLevelInput.classList.add("form-control");
            ToolLevelTD.appendChild(ToolLevelInput);

            var EfficiencyInput = document.createElement('input');
            EfficiencyInput.type = "number";
            EfficiencyInput.id = "Efficiency";
            EfficiencyInput.classList.add("form-control");
            EfficiencyTD.appendChild(EfficiencyInput);

            var IsModifierInput = document.createElement('input');
            IsModifierInput.type = "checkbox";
            IsModifierInput.id = "IsModifier";
            IsModifierInput.classList.add("form-check-label");
            IsModifierTD.appendChild(IsModifierInput);

            var deletButton = document.createElement('button');
            deletButton.classList.add("btn");
            deletButton.classList.add("btn-primary");
            deletButton.type = "button";
            deletButton.innerHTML="-";
            $(deletButton).click(deleteData);
            deleteTD.append(deletButton);

            if (toolData != null) {
                ToolTypeInput.value = toolData["ToolType"];
                ToolLevelInput.value = toolData["ToolLevel"];
                EfficiencyInput.value = toolData["Efficiency"];
                IsModifierInput.checked = toolData["IsModifier"];
                newRow.id = toolData["ToolID"];
            }
            newRow.append(deleteTD);
            newRow.append(ToolTypeTD);
            newRow.append(ToolLevelTD);
            newRow.append(EfficiencyTD);
            newRow.append(IsModifierTD);

            $("#toolData").append(newRow);
        }
    </script>
}
