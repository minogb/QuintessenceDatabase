@model QuintessenceDataServer.Models.Item

@{
    ViewBag.Title = Model.Name + "Details";
}

<br />
<h2>@Model.Name</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
    </dl>
</div>
<div class="container row">
    <div class="col col-lg-3">
        <div style="width:250px;height:250px; background-color: lightblue;"></div>
    </div>
    <div class="col" style="width:100%;">
        <h4>Base Item Information:</h4>
        <div class="col">
            <table class="table table-striped table-bordered">
                <tr>
                    <th class="col-lg-3">
                        Stack Size
                    </th>
                    <th>
                        Description
                    </th>
                </tr>
                <tr>
                    <td>
                        @if (@Model.StackSize.HasValue) {
                            WriteLiteral(@Model.StackSize.Value);
                        }
                        else {
                            WriteLiteral("Cannot Stack");
                        }
                    </td>
                    <td>
                        @Model.Description
                    </td>
                </tr>
            </table>
        </div>
        @if (Model.Equipment != null) {
            <div class="col">
                <h4>Equipment:</h4>
                <table class="table table-striped table-bordered">
                    <tr>
                        <th class="col-lg-3">
                            Slot
                        </th>
                        @if (Model.Equipment.ParentSlot.HasValue) {
                            <th>
                                Parent Slot
                            </th>
                        }
                        else {
                            <th>
                                Avaliable Slots
                            </th>
                        }
                    </tr>
                    <tr>
                        <td>
                            @Model.Equipment.SlotName
                        </td>

                        @if (Model.Equipment.ParentSlot.HasValue) {
                            <td>
                                @Model.Equipment.ParentSlotName
                            </td>
                        }
                        else {
                            <td>
                                <div class="row">
                                    @for (int i = 0; i < Model.Equipment.AvailableSlotNames.Count(); i++) {
                                        <div class="col col-lg-3">
                                            @Model.Equipment.AvailableSlotNames[i]
                                        </div>
                                        if ((i + 1) % 3 > 0 && i != (Model.Equipment.AvailableSlotNames.Count() - 1)) {
                                            <div class="col col-lg-1">
                                                |
                                            </div>
                                        }
                                    }
                                </div>
                            </td>
                        }
                    </tr>
                </table>
            </div>
        }
    </div>
</div>
<div>
    <hr />
    <dl class="dl-horizontal">
    </dl>
</div>
<div class="container row">
    <div class=" col">
        <h4>Tool Data</h4>
        <table class="table table-striped table-bordered table-hover">
            <tr>
                <th>
                    Tool Type
                </th>
                <th>
                    Tool Level
                </th>
                <th>
                    Efficiency
                </th>
                <th style="width: 100px;">
                    Is Modifier
                </th>
            </tr>
            @if (Model.Tools != null) {
                foreach (var tool in Model.Tools) {
                    <tr>
                        <td>
                            @tool.ToolType
                        </td>
                        <td>
                            @tool.ToolLevel
                        </td>
                        <td>
                            @tool.Efficiency
                        </td>
                        <td class="text-center">
                            @if (tool.IsModifier) {
                                WriteLiteral("&#10003");
                            }
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
    <div class="col">
        <h4>Level Requirement Data</h4>
        <table class="table table-striped table-bordered table-hover">
            <tr>
                <th>
                    Skill
                </th>
                <th>
                    Level
                </th>
                <th style="width: 100px;">
                    Is Modifier
                </th>
            </tr>
            @if (Model.Skills != null) {
                foreach (var skill in Model.Skills) {
                    <tr>
                        <td>
                            @skill.Skill
                        </td>
                        <td>
                            @skill.Level
                        </td>
                        <td class="text-center">
                            @if (skill.IsModifier) {
                                WriteLiteral("&#10003");
                            }
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

<p>
    <!-- @Html.ActionLink("Edit", "Edit", new { id = Model.ItemID }) |-->
    @Html.ActionLink("Back to List", "Index")
</p>
